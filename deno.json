{
  "name": "@hugojosefson/fns",
  "version": "2.1.6",
  "description": "Utility functions",
  "license": "MIT",
  "exports": {
    "./object/is-record": "./object/is-record.ts",
    "./object/is-non-null-object": "./object/is-non-null-object.ts",
    "./object/prop": "./object/prop.ts",
    "./object/deep-map-keys": "./object/deep-map-keys.ts",
    "./fn/transformer": "./fn/transformer.ts",
    "./fn/predicate": "./fn/predicate.ts",
    "./fn/swallow": "./fn/swallow.ts",
    "./fn/getter": "./fn/getter.ts",
    "./fn/is-triple-equal": "./fn/is-triple-equal.ts",
    "./fn/stringify": "./fn/stringify.ts",
    "./fn/not": "./fn/not.ts",
    "./fn/identity": "./fn/identity.ts",
    "./fn/pipe": "./fn/pipe.ts",
    "./fn/is-function": "./fn/is-function.ts",
    "./fn/and": "./fn/and.ts",
    "./fn/or": "./fn/or.ts",
    "./fn/always": "./fn/always.ts",
    "./fn/boolify": "./fn/boolify.ts",
    "./string/is-string": "./string/is-string.ts",
    "./string/string-type-guard": "./string/string-type-guard.ts",
    "./string/regex": "./string/regex.ts",
    "./string/s": "./string/s.ts",
    "./string/ss": "./string/ss.ts",
    "./string/sort-unique": "./string/sort-unique.ts",
    "./string/undefined-if-empty-string": "./string/undefined-if-empty-string.ts",
    "./array/is-array-of": "./array/is-array-of.ts",
    "./array/intersperse": "./array/intersperse.ts",
    "./array/reduce-to-largest-number": "./array/reduce-to-largest-number.ts",
    "./array/from-async-iterator": "./array/from-async-iterator.ts",
    "./array/from-iterator": "./array/from-iterator.ts",
    "./iterable/into-iterable": "./iterable/into-iterable.ts",
    "./iterable/into-async-iterable": "./iterable/into-async-iterable.ts",
    "./stream/into-readable-stream": "./stream/into-readable-stream.ts",
    "./number/is-number": "./number/is-number.ts",
    "./boolean/not": "./boolean/not.ts",
    "./boolean/is-boolean": "./boolean/is-boolean.ts",
    "./type-guard/optional": "./type-guard/optional.ts",
    "./type-guard/type-guard": "./type-guard/type-guard.ts"
  },
  "tasks": {
    "all": "                   deno fmt && deno lint --fix && (deno check . & deno publish --dry-run --allow-dirty & deno task test) && echo 'Available dependency bumps:' && deno task bump-deps:list",
    "test": "                  rm -rf coverage && deno test --coverage && (deno coverage --lcov --output=coverage/lcov.info)",
    "bump-deps:list": "        deno --allow-env --allow-read --allow-write='~/.local,.' --allow-run=git,deno --allow-net=jsr.io,registry.npmjs.org jsr:@molt/cli@0.19.8",
    "bump-deps:write": "       deno task -q bump-deps:list --write",
    "bump-deps:commit": "      deno task -q bump-deps:list --commit",
    "git-is-clean": "          test -z \"$(git status --porcelain)\"",
    "release": "               deno task release:ready-to-start && deno task release:commit && deno task release:tag && deno task release:push",
    "release:ready-to-start": "deno task git-is-clean && deno task all && deno task git-is-clean && deno publish --dry-run",
    "release:tag": "           git tag              $(deno task version)",
    "release:push": "          git push origin main $(deno task version)",
    "release:commit": "        deno --allow-all npm:fork-version@1.7.6 --changelog-all --tag-prefix='' --skip-tag && deno fmt CHANGELOG.md && git add CHANGELOG.md && git commit --amend --no-edit",
    "version": "               deno --allow-all npm:fork-version@1.7.6 --inspect-version"
  },
  "lock": false,
  "imports": {
    "@std/assert": "jsr:@std/assert@1.0.13",
    "@std/testing": "jsr:@std/testing@1.0.11",
    "regex-merge": "npm:regex-merge@^2.0.0"
  },
  "exclude": [
    "coverage",
    "docs"
  ]
}
